import mongoose from "mongoose";
import Mock from "mockjs";
import Users from "../models/Users.js";
import Doctors from "../models/Doctors.js";

const userTemplate = {
  _id: () => new mongoose.Types.ObjectId(),
};

const doctorUserIds = [
  "6630d0f266c1df8754d20b95",
  "6630d0f266c1df8754d20b98",
  "6630d0f266c1df8754d20b9a",
  "6630d0f266c1df8754d20b9c",
  "6630d0f266c1df8754d20b9d",
  "6630d0f266c1df8754d20b9e",
  "6630d0f266c1df8754d20ba0",
  "6630d0f266c1df8754d20ba1",
  "6630d0f266c1df8754d20ba7",
  "6630d0f266c1df8754d20ba8",
  "6630d0f266c1df8754d20baa",
  "6630d0f266c1df8754d20bab",
  "6630d0f266c1df8754d20bac",
  "6630d0f266c1df8754d20bae",
  "6630d0f266c1df8754d20baf",
  "6630d0f266c1df8754d20bb0",
  "6630d0f266c1df8754d20bb2",
  "6630d0f266c1df8754d20bb4",
  "6630d0f266c1df8754d20bb6",
  "6630d0f266c1df8754d20bb7",
  "6630d0f266c1df8754d20bba",
  "6630d0f266c1df8754d20bbb",
  "6630d0f266c1df8754d20bc1",
  "6630d0f266c1df8754d20bc2",
  "6630d0f266c1df8754d20bc3",
  "6630d0f266c1df8754d20bc4",
  "6630d0f266c1df8754d20bc5",
  "6630d0f266c1df8754d20bc7",
  "6630d0f266c1df8754d20bc8",
  "6630d0f266c1df8754d20bc9",
  "6630d0f266c1df8754d20bcb",
  "6630d0f266c1df8754d20bcc",
  "6630d0f266c1df8754d20bce",
  "6630d0f266c1df8754d20bcf",
  "6630d0f266c1df8754d20bd0",
  "6630d0f266c1df8754d20bd1",
  "6630d0f266c1df8754d20bd4",
  "6630d0f266c1df8754d20bd6",
  "6630d0f266c1df8754d20bda",
  "6630d0f266c1df8754d20bdf",
  "6630d0f266c1df8754d20be0",
  "6630d0f266c1df8754d20be1",
  "6630d0f266c1df8754d20be2",
  "6630d0f266c1df8754d20be3",
  "6630d0f266c1df8754d20be4",
  "6630d0f266c1df8754d20be9",
  "6630d0f266c1df8754d20bea",
  "6630d0f266c1df8754d20beb",
  "6630d0f266c1df8754d20bed",
  "6630d0f266c1df8754d20bef",
  "6630d0f266c1df8754d20bf2",
  "6630d0f266c1df8754d20bf3",
  "6630d0f266c1df8754d20bf5",
  "6630d0f266c1df8754d20bf6",
  "6630d0f266c1df8754d20bf7",
  "6630d0f266c1df8754d20bf8",
  "6630d0f266c1df8754d20bf9",
  "6630d0f266c1df8754d20bfa",
  "6630d0f266c1df8754d20bfe",
  "6630d0f266c1df8754d20bff",
  "6630d0f266c1df8754d20c02",
  "6630d0f266c1df8754d20c05",
  "6630d0f266c1df8754d20c0e",
  "6630d0f266c1df8754d20c10",
  "6630d0f266c1df8754d20c14",
  "6630d0f266c1df8754d20c15",
  "6630d0f266c1df8754d20c17",
  "6630d0f266c1df8754d20c18",
  "6630d0f266c1df8754d20c19",
  "6630d0f266c1df8754d20c1a",
  "6630d0f266c1df8754d20c1b",
  "6630d0f266c1df8754d20c20",
  "6630d0f266c1df8754d20c21",
  "6630d0f266c1df8754d20c22",
  "6630d0f266c1df8754d20c28",
  "6630d0f266c1df8754d20c2b",
  "6630d0f266c1df8754d20c2c",
  "6630d0f266c1df8754d20c2e",
  "6630d0f266c1df8754d20c31",
  "6630d0f266c1df8754d20c32",
  "6630d0f266c1df8754d20c33",
  "6630d0f266c1df8754d20c34",
  "6630d0f266c1df8754d20c37",
  "6630d0f266c1df8754d20c38",
  "6630d0f266c1df8754d20c39",
  "6630d0f266c1df8754d20c3d",
  "6630d0f266c1df8754d20c3f",
  "6630d0f266c1df8754d20c40",
  "6630d0f266c1df8754d20c41",
  "6630d0f266c1df8754d20c42",
  "6630d0f266c1df8754d20c45",
  "6630d0f266c1df8754d20c47",
  "6630d0f266c1df8754d20c49",
  "6630d0f266c1df8754d20c4a",
  "6630d0f266c1df8754d20c4f",
  "6630d0f266c1df8754d20c50",
  "6630d0f266c1df8754d20c51",
  "6630d0f266c1df8754d20c55",
  "6630d0f266c1df8754d20c56",
  "6630d0f266c1df8754d20c5b",
  "6630d0f266c1df8754d20c5d",
  "6630d0f266c1df8754d20c60",
  "6630d0f266c1df8754d20c61",
  "6630d0f266c1df8754d20c65",
  "6630d0f266c1df8754d20c66",
  "6630d0f266c1df8754d20c6a",
  "6630d0f266c1df8754d20c6d",
  "6630d0f266c1df8754d20c6f",
  "6630d0f266c1df8754d20c72",
  "6630d0f266c1df8754d20c75",
  "6630d0f266c1df8754d20c76",
  "6630d0f266c1df8754d20c7a",
  "6630d0f266c1df8754d20c7c",
  "6630d0f266c1df8754d20c7f",
  "6630d0f266c1df8754d20c80",
  "6630d0f266c1df8754d20c84",
  "6630d0f266c1df8754d20c86",
  "6630d0f266c1df8754d20c89",
  "6630d0f266c1df8754d20c8a",
  "6630d0f266c1df8754d20c8b",
  "6630d0f266c1df8754d20c8c",
  "6630d0f266c1df8754d20c8d",
  "6630d0f266c1df8754d20c8e",
  "6630d0f266c1df8754d20c8f",
  "6630d0f266c1df8754d20c92",
  "6630d0f266c1df8754d20c93",
  "6630d0f266c1df8754d20c94",
  "6630d0f266c1df8754d20c99",
  "6630d0f266c1df8754d20c9d",
  "6630d0f266c1df8754d20ca1",
  "6630d0f266c1df8754d20ca2",
  "6630d0f266c1df8754d20ca3",
  "6630d0f266c1df8754d20ca7",
  "6630d0f266c1df8754d20ca8",
  "6630d0f266c1df8754d20ca9",
  "6630d0f266c1df8754d20cab",
  "6630d0f266c1df8754d20cac",
  "6630d0f266c1df8754d20cad",
  "6630d0f266c1df8754d20caf",
  "6630d0f266c1df8754d20cb0",
  "6630d0f266c1df8754d20cb3",
  "6630d0f266c1df8754d20cb4",
  "6630d0f266c1df8754d20cb5",
  "6630d0f266c1df8754d20cb6",
  "6630d0f266c1df8754d20cb7",
  "6630d0f266c1df8754d20cb8",
  "6630d0f266c1df8754d20cc0",
  "6630d0f266c1df8754d20cc1",
  "6630d0f266c1df8754d20cc4",
  "6630d0f266c1df8754d20cc5",
  "6630d0f266c1df8754d20cc6",
  "6630d0f266c1df8754d20cc7",
  "6630d0f266c1df8754d20ccb",
  "6630d0f266c1df8754d20ccf",
  "6630d0f266c1df8754d20cd0",
  "6630d0f266c1df8754d20cd5",
  "6630d0f266c1df8754d20cd6",
  "6630d0f266c1df8754d20cdf",
  "6630d0f266c1df8754d20ce1",
  "6630d0f266c1df8754d20ce2",
  "6630d0f266c1df8754d20ce5",
  "6630d0f266c1df8754d20ce6",
  "6630d0f266c1df8754d20ce8",
  "6630d0f266c1df8754d20ceb",
  "6630d0f266c1df8754d20cee",
  "6630d0f266c1df8754d20cf1",
  "6630d0f266c1df8754d20cf3",
  "6630d0f266c1df8754d20cf4",
  "6630d0f266c1df8754d20cf7",
  "6630d0f266c1df8754d20cf9",
  "6630d0f266c1df8754d20cfb",
  "6630d0f266c1df8754d20cfc",
  "6630d0f266c1df8754d20d00",
  "6630d0f266c1df8754d20d01",
  "6630d0f266c1df8754d20d03",
  "6630d0f266c1df8754d20d04",
  "6630d0f266c1df8754d20d05",
  "6630d0f266c1df8754d20d08",
  "6630d0f266c1df8754d20d0a",
  "6630d0f266c1df8754d20d0c",
  "6630d0f266c1df8754d20d11",
  "6630d0f266c1df8754d20d13",
  "6630d0f266c1df8754d20d16",
  "6630d0f266c1df8754d20d17",
  "6630d0f266c1df8754d20d18",
  "6630d0f266c1df8754d20d19",
  "6630d0f266c1df8754d20d1c",
  "6630d0f266c1df8754d20d1f",
  "6630d0f266c1df8754d20d21",
  "6630d0f266c1df8754d20d22",
  "6630d0f266c1df8754d20d23",
  "6630d0f266c1df8754d20d24",
  "6630d0f266c1df8754d20d26",
  "6630d0f266c1df8754d20d27",
  "6630d0f266c1df8754d20d2a",
  "6630d0f266c1df8754d20d2b",
  "6630d0f266c1df8754d20d2c",
  "6630d0f266c1df8754d20d2e",
  "6630d0f266c1df8754d20d31",
  "6630d0f266c1df8754d20d32",
  "6630d0f266c1df8754d20d35",
  "6630d0f266c1df8754d20d36",
  "6630d0f266c1df8754d20d39",
  "6630d0f266c1df8754d20d3b",
  "6630d0f266c1df8754d20d3c",
  "6630d0f266c1df8754d20d3d",
  "6630d0f266c1df8754d20d40",
  "6630d0f266c1df8754d20d42",
  "6630d0f266c1df8754d20d45",
  "6630d0f266c1df8754d20d47",
  "6630d0f266c1df8754d20d4a",
  "6630d0f266c1df8754d20d4b",
  "6630d0f266c1df8754d20d4c",
  "6630d0f266c1df8754d20d4d",
  "6630d0f266c1df8754d20d4f",
  "6630d0f266c1df8754d20d51",
  "6630d0f266c1df8754d20d53",
  "6630d0f266c1df8754d20d57",
  "6630d0f266c1df8754d20d58",
  "6630d0f266c1df8754d20d59",
  "6630d0f266c1df8754d20d5a",
  "6630d0f266c1df8754d20d5c",
  "6630d0f266c1df8754d20d5e",
  "6630d0f266c1df8754d20d61",
  "6630d0f266c1df8754d20d6a",
  "6630d0f266c1df8754d20d6c",
  "6630d0f266c1df8754d20d6d",
  "6630d0f266c1df8754d20d6e",
  "6630d0f266c1df8754d20d6f",
  "6630d0f266c1df8754d20d71",
  "6630d0f266c1df8754d20d73",
  "6630d0f266c1df8754d20d76",
  "6630d0f266c1df8754d20d79",
  "6630d0f266c1df8754d20d7c",
  "6630d0f266c1df8754d20d7d",
  "6630d0f266c1df8754d20d7f",
  "6630d0f266c1df8754d20d80",
  "6630d0f266c1df8754d20d83",
  "6630d0f266c1df8754d20d84",
  "6630d0f266c1df8754d20d86",
];

const doctorTemplate = {
  userId: () => new mongoose.Types.ObjectId(),
  "specialization|1-3": [
    "Cardiology",
    "Dermatology",
    "Neurology",
    "Orthopedics",
    "Pediatrics",
  ],
  "education|1-3": [
    {
      degree: "@word",
      institution: "@title",
      year: "@integer(1980, 2022)",
    },
  ],
  status: "@word",
  experience: {
    totalYears: "@integer(0, 30)",
    inSpeciality: "@integer(0, 30)",
  },
  schedule: {
    monday: { start: "@time", end: "@time" },
    tuesday: { start: "@time", end: "@time" },
    wednesday: { start: "@time", end: "@time" },
    thursday: { start: "@time", end: "@time" },
    friday: { start: "@time", end: "@time" },
    saturday: { start: "@time", end: "@time" },
  },
  "languages|1-3": ["English", "Spanish", "French", "German", "Chinese"],
  "certifications|1-5": [
    "Board Certified",
    "Fellowship",
    "Specialist Training",
  ],
  "memberships|1-3": [
    "Medical Association",
    "Society of Cardiology",
    "Orthopedic Surgeon Association",
  ],
  "awards|1-3": [
    "Best Doctor Award",
    "Top Surgeon Award",
    "Excellence in Pediatrics",
  ],
  "researchInterests|1-5": [
    "Cardiovascular Research",
    "Neuroscience",
    "Orthopedic Biomechanics",
  ],
  "reviews|0-5": [
    {
      patientId: () => new mongoose.Types.ObjectId(),
      rating: "@float(0, 5, 1, 1)",
      comments: "@sentence",
    },
  ],
};

export const finalDoctors = doctorUserIds.map((id, idx) => ({
  ...Mock.mock(doctorTemplate),
  userId: id,
}));
